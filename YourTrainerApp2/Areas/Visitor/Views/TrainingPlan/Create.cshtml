@using Newtonsoft.Json
@using YourTrainerApp.Models.VM
@inject IHttpContextAccessor httpAcc

@model TrainingPlan 

@{
	TrainingPlan trainingPlan = JsonConvert.DeserializeObject<TrainingPlan>(httpAcc.HttpContext.Session.GetString("TrainingPlanData"));
	string exercisesInJson = httpAcc.HttpContext.Session.GetString("Exercises");
	List<TrainingPlanExerciseCreateVM> exercises = JsonConvert.DeserializeObject<List<TrainingPlanExerciseCreateVM>>(exercisesInJson);
}
	


<div class="container m-2 d-flex justify-content-center">
	
	<form method="post">
		<div class="text-center">
			<h2>Dodaj nowy plan</h2>
		</div>
		<div>
			<label for="title" class="form-label mt-4">Nazwa planu</label>
			<input name="title" id="title" type="text" class="form-control" value="@Model.Title" onblur="saveTitleData()"/>
		</div>
		<br>
		<div class="btn-group-toggle my-4 d-flex justify-content-center" data-toggle="buttons">
			@foreach (string day in new List<string>() {"Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota", "Niedziela"})
			{
				<label class="btn btn-secondary mx-1 ">
					<input type="checkbox"
						   class="days-checkbox d-none"
						   onclick="saveTrainigDaysData('@day'); changeCheckboxColor(this)"
						   @(Model.TrainingDaysDict[day] ? "checked" : "")>
					@day
				</label>
			}
		</div>
		<br />

		<div>
			<input asp-for="@trainingPlan.Creator" value="@httpAcc.HttpContext.Session.GetString("Username")" hidden />
		</div>

		<div class="row">
			@* Przechować model danych w zmiennej sesji - same id *@

			<label class="form-label mt-4">Ćwiczenia</label>

			@if (exercises is not null && exercises.Count > 0)
			{
				<div class="row d-flex justify-content-center">
				@for (int i = 0; i < exercises.Count; i++)
				{
					int exerciseId = Model.Exercises[i].EId;
					<div class="card m-2 p-0" style="width: 300px; height: fit-content;">
						<div class="card-header p-0">
							<img src="/@exercises[i].ImgPath1" alt="Alternate Text" style="width: 300px; height: 200.81px" />
						</div>
						<div class="card-body" style="height: 95%">
							<h6 class="card-title text-center">@exercises[i].Name</h6>
							<hr />
							<ol id="ol_@exerciseId">

								@{
									string[] reps = Model.Exercises[i].Reps.Split(";");
									string[] weights = Model.Exercises[i].Weights.Split(";");
								}

								@for (int j = 0; j < Model.Exercises[i].Series; j++)
								{
									if (exercises[i].Equipment == "" || exercises[i].Equipment == "body only" || exercises[i].Equipment == "other")
									{
										<li>
											seria:
											<input class="input_@exerciseId" id="r_input_@exerciseId" type="number" value="4" min="1" max="10" style="width: 50px;" />
											powtórzeń
											<input class="input_@exerciseId" id="w_input_@exerciseId" type="number" value="0" hidden/>
										</li>
									}
									else
									{
										<li>
											seria:
											<input class="input_@exerciseId" 
												   id="@j-r-@exerciseId" 
												   type="number" value="@reps[j]" min="1" max="10" 
												   style="width: 50px;"
												   onblur="saveRepsAndWeightsData(@exerciseId, @j)" />
											 x
											<input class="input_@exerciseId" 
												   id="@j-w-@exerciseId" 
												   type="number" value="@weights[j]" step="2.5" max="500" 
												   style="width: 50px;" 
												   onblur="saveRepsAndWeightsData(@exerciseId, @j)"/>
											kg
										</li>		
									}		
								}
								
							</ol>
							<div class="row d-flex justify-content-center">
								<div class="col-4 btn-group">
									<a class="btn button-red" asp-action="DecrementExerciseSeries" asp-route-id="@exerciseId">-</a>
									<a class="btn button-green" asp-action="IncrementExerciseSeries" asp-route-id="@exerciseId">+</a>	
								</div>
							</div>
						</div>
					</div>
				}
				</div>
			}

			<a class="btn button-green mx-3" type="button" style="width: fit-content"
			   asp-area="Visitor" asp-controller="TrainingPlan" asp-action="ExerciseSelection"> + </a>
		</div>

		<div>
			<label for="notes" class="form-label mt-4">Notatka do planu</label>
			<textarea name="notes" class="form-control" id="notes" type="text" asp-for="@Model.Notes" onblur="saveNotesData()"></textarea>
		</div>

		<br /><br />
		<div>
			<button type="submit" class="btn btn-outline-primary form-control"
					asp-area="Visitor" asp-controller="TrainingPlan" asp-action="Create" asp-route-trainingPlan="@trainingPlan">Zatwierdź</button>

		</div>
	</form>
</div>

@* jQuerry modal popup *@

@section Scripts
{
	<script>

		function saveNotesData() {
			var notes = document.getElementById("notes").value;

			$.ajax({
				type: 'GET',
				url: '/Visitor/TrainingPlan/SaveNotesData',
				data: { notes: notes },
				// async: true,
				success: function () {
					console.log("Dane zapisane do sesji.");
				},
				error: function () {
					console.log("Wystąpił błąd podczas zapisywania danych do sesji.");
				}
			});
		}

		function saveTrainigDaysData(day) {

			$.ajax({
				type: 'GET',
				url: '/Visitor/TrainingPlan/SaveTrainigDaysData',
				data: { day: day },
				// async: true,
				success: function () {
					console.log("Dane zapisane do sesji.");
				},
				error: function () {
					console.log("Wystąpił błąd podczas zapisywania danych do sesji.");
				}
			});
		}

		function saveTitleData() {
			var title = document.getElementById("title").value;

			$.ajax({
				type: 'GET',
				url: '/Visitor/TrainingPlan/SaveTitleData',
				data: { title: title },
				// async: true,
				success: function () {
					console.log("Dane zapisane do sesji.");
				},
				error: function () {
					console.log("Wystąpił błąd podczas zapisywania danych do sesji.");
				}
			});
		}

		function saveRepsAndWeightsData(id, position) {
			event.preventDefault();

			var reps = document.getElementById(position + "-r-" + id).value;
			var weights = document.getElementById(position + "-w-" + id).value;

			$.ajax({
				type: 'GET',
				url: '/Visitor/TrainingPlan/SaveRepsAndWeightsData',
				data: { values: reps + ";" + weights, exerciseId: id, seriesPosition: position },
				// async: true,
				success: function (response) {
					console.log(response);
					console.log("Dane zapisane do sesji.");
				},
				error: function (response) {
					console.log(response);
					console.log("Wystąpił błąd podczas zapisywania danych do sesji.");
				}
			});
		}
	</script>
	<script>

		var checkboxInputs = document.querySelectorAll(".days-checkbox");

		checkboxInputs.forEach(function(checkboxInput) {
			if (checkboxInput.checked) {
				checkboxInput.parentElement.style.color = '#22CE00';
				checkboxInput.parentElement.style.border = '1px solid #22CE00';
			}
			else {
				checkboxInput.parentElement.style.color = '';
				checkboxInput.parentElement.style.border = 'none';
			}
		})

		function changeCheckboxColor(checkbox) {
			if (checkbox.checked) {
				checkbox.parentElement.style.color = '#22CE00';
				checkbox.parentElement.style.border = '1px solid #22CE00';
			} else {
				checkbox.parentElement.style.color = '';
				checkbox.parentElement.style.border = 'none';
			}
		}
	</script>
	<script>
		function displayInputs(id) {
			var inputs = document.getElementsByClassName("input_" + id);

			var values = document.getElementsByClassName("value_" + id);

			for (var i = 0; i < inputs.length; i++) {
				inputs[i].style.display = "inline-block";
				values[i].style.display = "none";
			}
		}

		function hideInputs(id) {
			var inputs = document.getElementsByClassName("input_" + id);

			var values = document.getElementsByClassName("value_" + id);

			for (var i = 0; i < inputs.length; i++) {
				inputs[i].style.display = "none";
				values[i].style.display = "inline-block";
			}
		}

		function addSeries(id) {
			const htmlCode = '<li>seria: <input class="input_' + id + '" type="number" value="4" max="10" style="width: 50px;" /> x <input class="input_' + id + '" type="number" value="80" max="500" style="width: 50px;" /> kg</li>'

			var ol = document.getElementById("ol_" + id);
			ol.innerHTML += htmlCode;
		}

		function removeSeries(id) {
			var ol = document.getElementById("ol_" + id);
			let lastLi = ol.lastChild;

			ol.removeChild(lastLi);

		}

	</script>



}