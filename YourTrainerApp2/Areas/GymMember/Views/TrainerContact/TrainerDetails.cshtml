@using YourTrainerApp.Areas.GymMember.Models
@model TrainerContact

<div class="container">
	<div class="m-3 px-4 py-4 d-flex justify-content-between align-items-center" style="background-color: #303030; border-radius: 50px">
		<div class="d-flex col-6">
			<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
				<path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
				<path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1" />
			</svg>
			<h5 class="ms-2">@Model.TrainerData.TrainerName</h5>
		</div>

		<div class="col-6 d-flex justify-content-between">
			@* TODO: dodać rozwijane menu przy zmniejszaniu się *@
			<a id="messagesShow" class="a-green">Wiadomości</a>
			<a class="a-green">Przypisane plany</a>
			<a class="a-green">Oceń</a>
			<a class="a-green">
				<svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
					<path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492M5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0" />
					<path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115z" />
				</svg>
			</a>
            <a class="btn button-red" asp-area="GymMember" asp-controller="TrainerContact" asp-action="DeleteTrainer">Usuń</a>
		</div>
	</div>
	<div id="messages" class="container" hidden>
		<div class="container">
			<partial name="_Messages" />
		</div>
	</div>
	<div class="container">
		<partial name="_AssignedPlans" />
	</div>
</div>

@section Scripts {
	@* <script>
		document.getElementById("test").style.color = "red";
	</script> *@
	<script>
		$('#messagesShow').click(function () {
			$('#messages').removeAttr('hidden');
		});
	</script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const stars = document.querySelectorAll('.star');
            console.log("TEST");
            stars.forEach(star => {
                star.addEventListener('mouseover', handleMouseOver());
                star.addEventListener('mouseout', handleMouseOut);
                star.addEventListener('click', function () {
                    const value = star.getAttribute('data-value');
                    setActiveStars(value);
                });
            });

            function handleMouseOver(event) {
                const value = event.target.getAttribute('data-value');
                highlightStars(value);
            }

            function handleMouseOut() {
                resetStars();
            }

            // function handleClick(event) {
            //     const value = event.getAttribute('data-value');
            //     setActiveStars(value);
            // }

            function highlightStars(value) {
                stars.forEach(star => {
                    if (star.getAttribute('data-value') <= value) {
                        star.classList.add('hover');
                    } else {
                        star.classList.remove('hover');
                    }
                });
            }

            function resetStars() {
                stars.forEach(star => {
                    star.classList.remove('hover');
                });
            }

            function setActiveStars(value) {
                stars.forEach(star => {
                    if (star.getAttribute('data-value') <= value) {
                        star.classList.add('active');
                    } else {
                        star.classList.remove('active');
                    }
                });
            }
        });

    </script>
}

